cmake_minimum_required(VERSION 3.15)
cmake_policy(SET CMP0091 NEW)
if(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
    set(CMAKE_TOOLCHAIN_FILE ${CMAKE_CURRENT_SOURCE_DIR}/../vcpkg/scripts/buildsystems/vcpkg.cmake
  CACHE STRING "Vcpkg toolchain file")
endif()
set(Main_Proj DiceMaid-OneBot)
project(${Main_Proj})

include_directories(Diceki Helper Anys Frame OneBot)

aux_source_directory(Diceki Dice_SRC)
aux_source_directory(OneBot API_SRC)
aux_source_directory(Helper Helper_SRC)
aux_source_directory(Anys Anys_SRC)

add_executable(${Main_Proj} ${Anys_SRC} ${Dice_SRC} ${Helper_SRC} ${API_SRC})
find_package(yaml-cpp CONFIG REQUIRED)
target_link_libraries(${Main_Proj} PRIVATE yaml-cpp::yaml-cpp)
find_package(libuv CONFIG REQUIRED)
target_link_libraries(${Main_Proj} PRIVATE $<IF:$<TARGET_EXISTS:libuv::uv_a>,libuv::uv_a,libuv::uv>)
find_package(libwebsockets CONFIG REQUIRED)
target_link_libraries(${Main_Proj} PRIVATE websockets)
find_package(Lua REQUIRED)
target_include_directories(${Main_Proj} PRIVATE ${LUA_INCLUDE_DIR})
target_link_libraries(${Main_Proj} PRIVATE ${LUA_LIBRARIES})
set_property(TARGET ${Main_Proj} PROPERTY CXX_STANDARD 17)
set_property(TARGET ${Main_Proj} PROPERTY CXX_STANDARD_REQUIRED ON)

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS "-fpermissive ${CMAKE_CXX_FLAGS}")
    target_link_libraries(${Main_Proj} PRIVATE $<$<VERSION_LESS:$<CXX_COMPILER_VERSION>,9.0>:stdc++fs>)
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang")
    set(CMAKE_CXX_FLAGS "-fpermissive -Wno-invalid-source-encoding ${CMAKE_CXX_FLAGS}")
    set(CMAKE_SHARED_LINKER_FLAGS "-undefined dynamic_lookup ${CMAKE_SHARED_LINKER_FLAGS}")
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "-fpermissive -Wno-invalid-source-encoding ${CMAKE_CXX_FLAGS}")
    target_link_libraries(${Main_Proj} PRIVATE $<$<VERSION_LESS:$<CXX_COMPILER_VERSION>,9.0>:c++fs>)
    if(CMAKE_SYSTEM_NAME STREQUAL Android)
    	set(CMAKE_SHARED_LINKER_FLAGS "-static-libstdc++ ${CMAKE_SHARED_LINKER_FLAGS}")
    endif()
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    set(CMAKE_CXX_FLAGS "/source-charset:utf-8 /execution-charset:utf-8 ${CMAKE_CXX_FLAGS} /EHsc- /EHc-")
    string(REGEX MATCH static IS_STATIC ${VCPKG_TARGET_TRIPLET})
    if(IS_STATIC STREQUAL static)
        set_property(TARGET ${Main_Proj} PROPERTY
            MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
    endif()
endif()

include(CheckCSourceCompiles)

include(CheckIPOSupported)
check_ipo_supported(RESULT supported)

if(supported)
    set_property(TARGET ${Main_Proj} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
    if(CMAKE_SYSTEM_NAME STREQUAL Android)
    	STRING(REGEX REPLACE "-fuse-ld=gold" "" CMAKE_CXX_LINK_OPTIONS_IPO "${CMAKE_CXX_LINK_OPTIONS_IPO}")
    endif()
endif()

if(NOT ((CMAKE_CXX_COMPILER_ID STREQUAL "MSVC") OR (CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang")))
    set_target_properties(${Main_Proj} PROPERTIES LINK_FLAGS_RELEASE "-s -Wl,--exclude-libs,ALL")
endif()


